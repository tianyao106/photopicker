apply plugin: 'com.android.library'
//apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.novoda.bintray-release'

// This is the library version used when deploying the artifact
//version = "1.0"
//group = "com.foamtrace" // Maven Group ID for the artifact

//def siteUrl = 'https://github.com/foamtrace/PhotoPicker'      // Homepage URL of the library
//def gitUrl = 'https://github.com/foamtrace/PhotoPicker.git'   // Git repository URL

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    resourcePrefix "android_" // 资源前缀

    defaultConfig {
        minSdkVersion 11
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.+'
    implementation 'com.android.support:design:27.+'
    api 'com.github.bumptech.glide:glide:4.6.1'
    implementation 'com.github.chrisbanes.photoview:library:+'
}

//Properties properties = new Properties()
//properties.load(project.rootProject.file('local.properties').newDataInputStream())

//bintray {
//    user = properties.getProperty("bintray.user")
//    key = properties.getProperty("bintray.apikey")
//
//    configurations = ['archives']
//    pkg {
//        repo = "maven"
//        name = "PhotoPicker"
//        websiteUrl = siteUrl
//        vcsUrl = gitUrl
//        licenses = ["Apache-2.0"]
//        publish = true
//    }
//}


//task sourcesJar(type: Jar) {
//    from android.sourceSets.main.java.srcDirs
//    classifier = 'sources'
//}
//
//task javadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}
//
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
//artifacts {
//    archives javadocJar
//    archives sourcesJar
//}
//
//task findConventions << {
//    println project.getConvention()
//}

publish {
    userOrg = 'tianyao207'
    groupId = 'com.tianyao.xiaolu'
    artifactId = 'winfo/winfo'
    publishVersion = '1.0.0'
    desc = 'photopicker'
    website = 'https://github.com/tianyao106/photopicker'
}

tasks.withType(Javadoc).all {
    enabled = false
}